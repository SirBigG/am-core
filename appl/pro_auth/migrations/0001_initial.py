# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-02 11:16
from __future__ import unicode_literals

import appl.pro_auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
        ('classifier', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(error_messages={b'unique': 'A user with that email already exists.'}, help_text='Required. You use it at every entrance to the site.', max_length=254, unique=True, verbose_name='user email')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('phone1', models.CharField(max_length=25, verbose_name='main phone')),
                ('phone2', models.CharField(blank=True, max_length=25, null=True, verbose_name='extra phone')),
                ('phone3', models.CharField(blank=True, max_length=25, null=True, verbose_name='extra phone')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='date of birth')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, upload_to=b'/uploads/avatars/', verbose_name='avatar')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='classifier.Location', verbose_name='user location')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'swappable': 'AUTH_USER_MODEL',
                'db_table': 'custom_user',
                'verbose_name': 'custom user',
                'verbose_name_plural': 'custom users',
            },
            managers=[
                ('objects', appl.pro_auth.models.UserManager()),
            ],
        ),
    ]
