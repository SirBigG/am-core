# Generated by Django 5.0.3 on 2024-04-03 21:27

import django.db.models.deletion
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("classifier", "0011_category_absolute_url"),
        ("registry", "0001_initial"),
        ("services", "0011_feedback_created_reviews_created"),
    ]

    operations = [
        migrations.CreateModel(
            name="VarietyCategory",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("slug", models.CharField(max_length=255, unique=True, verbose_name="transliteration value")),
                ("title", models.CharField(max_length=255, verbose_name="category title")),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "meta",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="category-meta-data+",
                        to="services.metadata",
                        verbose_name="category meta data",
                    ),
                ),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="registry.varietycategory",
                        verbose_name="category parent",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Variety",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=255)),
                ("title_original", models.CharField(blank=True, max_length=255, null=True)),
                ("application_number", models.CharField(blank=True, max_length=255, null=True)),
                ("registration_year", models.IntegerField(blank=True, null=True)),
                ("unregister_year", models.IntegerField(blank=True, null=True)),
                ("unregister_date", models.DateField(blank=True, null=True)),
                ("recommended_zone", models.CharField(blank=True, max_length=50, null=True)),
                ("direction_of_use", models.CharField(blank=True, max_length=50, null=True)),
                ("ripeness_group", models.CharField(blank=True, max_length=50, null=True)),
                ("quality", models.CharField(blank=True, max_length=50, null=True)),
                ("excluded", models.BooleanField(default=False)),
                ("slug", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "applicant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="applicant",
                        to="registry.company",
                    ),
                ),
                (
                    "applicant2",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="applicant2",
                        to="registry.company",
                    ),
                ),
                (
                    "breeder",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="breeder",
                        to="registry.company",
                    ),
                ),
                (
                    "breeder2",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="breeder2",
                        to="registry.company",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="registry.company"
                    ),
                ),
                (
                    "original_country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="original_country",
                        to="classifier.country",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owner",
                        to="registry.company",
                    ),
                ),
                (
                    "owner2",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owner2",
                        to="registry.company",
                    ),
                ),
                (
                    "registration_country",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="classifier.country"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="registry.varietycategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Variety",
                "verbose_name_plural": "Varieties",
            },
        ),
    ]
